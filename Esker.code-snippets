{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Loop de productos lado del servidor": 
	{
		"description": "Testing a for loop.",
		"prefix": ["for", "for-const"],
		"body": ["for (const ${2:element} of ${1:array}) {", "\t$0", "}"]
	},

	"Loop de productos lado del cliente": 
	{
		"prefix": ["for", "for-const"],
		"body": ["for (const ${2:element} of ${1:array}) {", "\t$0", "}"],
		"description": "Testing a for loop."
	},

	"Loop de items lado del server":
	{
		"description": "Looping line items server side",
		"prefix": ["loop","query","server query"],
		"body": [
			"var lineItemsTable = Data.GetTable(\"LineItems__\");",
			"var itemCount = lineItemsTable.GetItemCount();\n",
			"for ( var i = 0; i < itemCount; i++ )",
			"{",
			"\t$0var item = lineItemsTable.GetItem(i);",
			"\tvar ${1:field} = lineItem.GetValue(${1:field});",
			"\titem.SetValue(\"${2:field}\", ${3:value});",
			"}"
		]
	},

	"Loop de items lado del cliente": 
	{
		"description": "Looping line items client side",
		"prefix": ["loop","query","client query"],
		"body": [
			"for (var i = 0; i < Controls.LineItems__.GetItemCount(); i++)",
			"{",
			"\t$0var item = Controls.LineItems__.GetItem(i);",
			"\tvar ${1:field} = item.GetValue(\"${1:field}\");",
			"}"
		]
	},
}